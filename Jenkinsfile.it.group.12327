/*
 *  Copyright (C) 2011-2021 Red Hat, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
def artifact_glob="build/*"
def build_image="quay.io/factory2/spmm-jenkins-agent-go-centos7:latest"

pipeline {
  agent {
    kubernetes {
      cloud params.JENKINS_AGENT_CLOUD_NAME
      label "jenkins-slave-${UUID.randomUUID().toString()}"
      serviceAccount "jenkins"
      defaultContainer 'jnlp'
      yaml """
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          app: "jenkins-${env.JOB_BASE_NAME}"
          indy-pipeline-build-number: "${env.BUILD_NUMBER}"
      spec:
        containers:
        - name: jnlp
          image: ${build_image}
          imagePullPolicy: Always
          tty: true
          env:
          - name: HOME
            value: /home/jenkins
          - name: GOROOT
            value: /usr/lib/golang
          - name: GOPATH
            value: /home/jenkins/gopath
          - name: GOPROXY
            value: https://proxy.golang.org
          resources:
            requests:
              memory: 4Gi
              cpu: 2000m
            limits:
              memory: 8Gi
              cpu: 4000m
          workingDir: /home/jenkins
      """
    }
  }
  stages {
    stage ('id001') {
      parallel {
        stage('build-id0001-1') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102053")
              ]
            )
          }
        }
        stage('build-id0001-2') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102048")
              ]
            )
          }
        }
      }
    }
    stage ('id002') {
      parallel {
        stage('build-id0002-1') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102051")
              ]
            )
          }
        }
        stage('build-id0002-2') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102052")
              ]
            )
          }
        }
        stage('build-id0002-3') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102050")
              ]
            )
          }
        }
      }
    }
    stage ('id003') {
      parallel {
        stage('build-id0003-1') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102054")
              ]
            )
          }
        }
        stage('build-id0003-2') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102047")
              ]
            )
          }
        }
      }
    }
    stage ('id004') {
      parallel {
        stage('build-id0004-1') {
          steps {
            build(
              job: "indy-integration-test",
              parameters: [
                string(name:"BUILD_ID", value: "12327/builds/102049")
              ]
            )
          }
        }
      }
    }
  }
}